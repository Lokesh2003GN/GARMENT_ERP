# Generated by Django 5.1.4 on 2025-08-23 14:53

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type', models.CharField(max_length=15)),
                ('phone1', models.CharField(max_length=15)),
                ('phone2', models.CharField(blank=True, max_length=15)),
                ('address', models.TextField(blank=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=100)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('note', models.CharField(blank=True, max_length=150, null=True)),
                ('amount', models.FloatField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_wage', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Warp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('meters', models.FloatField(null=True)),
                ('date_start_warper', models.DateField(blank=True, null=True)),
                ('date_start_weaver', models.DateField(blank=True, null=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('isComplected', models.BooleanField(default=False)),
                ('isWarped', models.BooleanField(default=False)),
                ('warp_wage', models.FloatField(blank=True, null=True)),
                ('warp_yarn', models.FloatField(null=True)),
                ('isSecondary', models.BooleanField(default=False)),
                ('primary_warp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='secondary_warps', to='core.warp')),
                ('warper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='warper', to=settings.AUTH_USER_MODEL)),
                ('weaver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weaver', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_start_warper', '-date_start_weaver'],
            },
        ),
        migrations.CreateModel(
            name='Wage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('wage_good', models.FloatField()),
                ('wage_demage', models.FloatField()),
                ('wage_extra', models.FloatField()),
                ('warp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wage_entries', to='core.warp')),
            ],
        ),
        migrations.CreateModel(
            name='Piece',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('count', models.FloatField()),
                ('length', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(choices=[('good', 'Good'), ('demage', 'Demage'), ('extra', 'Extra'), ('return', 'Return')], default='good', max_length=10)),
                ('warp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.warp')),
            ],
        ),
        migrations.CreateModel(
            name='WarpDesign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company')),
            ],
        ),
        migrations.AddField(
            model_name='warp',
            name='design',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='design', to='core.warpdesign'),
        ),
        migrations.CreateModel(
            name='Yarn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=150, null=True)),
                ('count', models.FloatField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company')),
            ],
        ),
        migrations.CreateModel(
            name='WarpDesignEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.FloatField()),
                ('lint_count', models.FloatField()),
                ('color', models.CharField(max_length=7)),
                ('warp_design', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='core.warpdesign')),
                ('yarn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.yarn')),
            ],
        ),
        migrations.CreateModel(
            name='Yarn_Transactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('quantity', models.FloatField()),
                ('transaction_type', models.CharField(choices=[('give', 'Give'), ('buy', 'Buy')], default='give', max_length=10)),
                ('to', models.CharField(choices=[('warper', 'Warper'), ('weaver', 'Weaver')], max_length=10)),
                ('note', models.CharField(blank=True, max_length=150, null=True)),
                ('warp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='warp_transactions', to='core.warp')),
                ('yarn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yarn_transactions', to='core.yarn')),
            ],
        ),
    ]
